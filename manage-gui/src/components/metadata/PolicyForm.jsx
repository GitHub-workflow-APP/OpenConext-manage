import React, {useEffect, useState} from "react";

import "./PolicyForm.scss";
import I18n from "i18n-js";
import ReactTooltip from "react-tooltip";
import {Select} from "../index";
import {isEmpty} from "../../utils/Utils";
import CheckBox from "../CheckBox";
import {AutoFormat} from "../../utils/AutoformatPolicy";

export default function PolicyForm({
                                       identityProviders = [],
                                       serviceProviders = [],
                                       policyAttributes = [],
                                       initial = true,
                                       data,
                                       onChange,
                                       onError,
                                       errors,
                                       isNew
                                   }) {

    const [autoGenerateDescription, setAutoGenerateDescription] = useState(false);

    useEffect(() => {
        //Runs only on the first render
    }, []);

    const providerLabel = (providers, selectedProvider) => {
        const provider = providers.find(prov => prov.data.entityid === selectedProvider.name);
        return isEmpty(provider) ? selectedProvider.name : provider.data.metaDataFields["name:en"];
    }

    const renderAutoFormatDescription = () => {
        if (autoGenerateDescription) {
            const identityProviderNames = (data.identityProviderIds || []).map(prov => providerLabel(identityProviders, prov));
            const serviceProviderNames = (data.serviceProviderIds || []).map(prov => providerLabel(serviceProviders, prov));
            const description = AutoFormat.description(
                data,
                identityProviderNames,
                serviceProviderNames);
            if (data.description !== description) {
                onChange("data.description", description);
            }
        }
        return data.description || "";
    }

    const onChangeIdentityProviders = (options) => {
        onChange("data.identityProviderIds", options.map(option => ({name: option.value})))
    }

    const onChangeServiceProviders = (options) => {
        onChange("data.serviceProviderIds", options.map(option => ({name: option.value})))
    }

    const providerOptions = (providers, providerKey) =>
        providers
            .filter(provider => !(data[providerKey] || []).some(prov => prov.name === provider.data.entityid))
            .map(provider => ({
                label: provider.data.metaDataFields["name:en"] || "Missing",
                value: provider.data.entityid
            }))

    const providerValues = (providers, providerKey) =>
        (data[providerKey] || [])
            .map(provider => ({
                value: provider.name,
                label: providerLabel(providers, provider)
            }))


    return (
        <section className="metadata-policy-form">
            <section className="policy-form">
                <div className="input-field">
                    <label htmlFor="name">
                        <span>{I18n.t("policies.name")}</span>
                        <i className="fa fa-info-circle"
                           data-for="name-tooltip"
                           data-tip/>
                        <ReactTooltip id="name-tooltip"
                                      type="info"
                                      place="right"
                                      class="tool-tip"
                                      effect="solid">
                            <span>{I18n.t("policies.nameTooltip")}</span>
                        </ReactTooltip>

                    </label>
                    <input id="name"
                           type="text"
                           value={data.name || ""}
                           onChange={e => onChange("data.name", e.target.value)}/>
                </div>
                <div className="input-field">
                    <label htmlFor="institutionProviders">
                        <span>{I18n.t("policies.institutionProviders")}</span>
                        <i className="fa fa-info-circle"
                           data-for="institutionProviders-tooltip"
                           data-tip/>
                        <ReactTooltip id="institutionProviders-tooltip"
                                      type="info"
                                      place="right"
                                      class="tool-tip"
                                      effect="solid">
                            <span>{I18n.t("policies.institutionProvidersTooltip")}</span>
                        </ReactTooltip>
                    </label>
                    <Select
                        isMulti={true}
                        className="policy-select"
                        onChange={onChangeIdentityProviders}
                        placeholder={I18n.t("policies.institutionProvidersPlaceholder")}
                        options={providerOptions(identityProviders, "identityProviderIds")}
                        value={providerValues(identityProviders, "identityProviderIds")}
                    />
                </div>
                <div className="input-field">
                    <label htmlFor="serviceProviders">
                        <span>{I18n.t("policies.serviceProviders")}</span>
                        <i className="fa fa-info-circle"
                           data-for="serviceProviders-tooltip"
                           data-tip/>
                        <ReactTooltip id="serviceProviders-tooltip"
                                      type="info"
                                      place="right"
                                      class="tool-tip"
                                      effect="solid">
                            <span>{I18n.t("policies.serviceProvidersTooltip")}</span>
                        </ReactTooltip>
                    </label>
                    <Select
                        isMulti={true}
                        className="policy-select"
                        onChange={onChangeServiceProviders}
                        placeholder={I18n.t("policies.serviceProvidersPlaceholder")}
                        options={providerOptions(serviceProviders, "serviceProviderIds")}
                        value={providerValues(serviceProviders, "serviceProviderIds")}
                    />
                </div>

                <p>{I18n.t("policies.access")}</p>
                <div className="checkbox-options">
                    <div className="checkbox-container">
                        <label htmlFor="permit">
                            <span>{I18n.t("policies.permit")}</span>
                            <i className="fa fa-info-circle"
                               data-for="permit-tooltip"
                               data-tip/>
                            <ReactTooltip id="permit-tooltip"
                                          type="info"
                                          place="right"
                                          class="tool-tip"
                                          effect="solid">
                                <span>{I18n.t("policies.permitTooltip")}</span>
                            </ReactTooltip>
                        </label>
                        <CheckBox
                            name="permit"
                            onChange={e => onChange("data.denyRule", !e.target.checked)}
                            value={!data.denyRule}
                        />
                    </div>
                    <div className="checkbox-container">
                        <label htmlFor="deny">
                            <span>{I18n.t("policies.deny")}</span>
                            <i className="fa fa-info-circle"
                               data-for="deny-tooltip"
                               data-tip/>
                            <ReactTooltip id="deny-tooltip"
                                          type="info"
                                          place="right"
                                          class="tool-tip"
                                          effect="solid">
                                <span>{I18n.t("policies.denyTooltip")}</span>
                            </ReactTooltip>
                        </label>
                        <CheckBox
                            name="deny"
                            onChange={e => onChange("data.denyRule", e.target.checked)}
                            value={data.denyRule}
                        />
                    </div>
                </div>
                <p>{I18n.t("policies.rules")}</p>
                <div className="checkbox-options">
                    <div className="checkbox-container">
                        <label htmlFor="and">
                            <span>{I18n.t("policies.and")}</span>
                            <i className="fa fa-info-circle"
                               data-for="and-tooltip"
                               data-tip/>
                            <ReactTooltip id="and-tooltip"
                                          type="info"
                                          place="right"
                                          class="tool-tip"
                                          effect="solid">
                                <span>{I18n.t("policies.andTooltip")}</span>
                            </ReactTooltip>
                        </label>
                        <CheckBox
                            name="permit"
                            onChange={e => onChange("data.allAttributesMustMatch", !e.target.checked)}
                            value={!data.allAttributesMustMatch}
                        />
                    </div>
                    <div className="checkbox-container adjustment">
                        <label htmlFor="or">
                            <span>{I18n.t("policies.or")}</span>
                            <i className="fa fa-info-circle"
                               data-for="or-tooltip"
                               data-tip/>
                            <ReactTooltip id="or-tooltip"
                                          type="info"
                                          place="right"
                                          class="tool-tip"
                                          effect="solid">
                                <span>{I18n.t("policies.orTooltip")}</span>
                            </ReactTooltip>
                        </label>
                        <CheckBox
                            name="deny"
                            onChange={e => onChange("data.allAttributesMustMatch", e.target.checked)}
                            value={data.allAttributesMustMatch}
                        />
                    </div>
                </div>
                <p>{I18n.t("policies.attribute")}</p>
                {data.attributes.map((attr, index) =>
                    <div className="attribute">
                        <input type="text"
                               value={data.denyAdvice || ""}
                               onChange={e => onChange("data.denyAdvice", e.target.value)}/>
                    </div>
                )}
                <div className="input-field">
                    <label htmlFor="description">
                        <span>{I18n.t("policies.description")}</span>
                        <i className="fa fa-info-circle"
                           data-for="description-tooltip"
                           data-tip/>
                        <ReactTooltip id="description-tooltip"
                                      type="info"
                                      place="right"
                                      class="tool-tip"
                                      effect="solid">
                            <span>{I18n.t("policies.descriptionTooltip")}</span>
                        </ReactTooltip>
                    </label>
                    <textarea id="description"
                              rows={5}
                              value={renderAutoFormatDescription()}
                              onChange={e => onChange("data.description", e.target.value)}/>
                    <CheckBox name="autoGenerateDescription"
                              value={autoGenerateDescription}
                              onChange={e => setAutoGenerateDescription(e.target.checked)}
                              info={I18n.t("policies.autoGenerateDescription")}/>
                </div>
                <div className="input-field">
                    <label htmlFor="denyAdvice">
                        <span>{I18n.t("policies.denyAdvice")}</span>
                        <i className="fa fa-info-circle"
                           data-for="denyAdvice-tooltip"
                           data-tip/>
                        <ReactTooltip id="denyAdvice-tooltip"
                                      type="info"
                                      place="right"
                                      class="tool-tip"
                                      effect="solid">
                            <span>{I18n.t("policies.denyAdviceTooltip")}</span>
                        </ReactTooltip>

                    </label>
                    <input id="denyAdvice"
                           type="text"
                           value={data.denyAdvice || ""}
                           onChange={e => onChange("data.denyAdvice", e.target.value)}/>
                </div>
                <div className="input-field">
                    <label htmlFor="denyAdviceNl">
                        <span>{I18n.t("policies.denyAdviceNl")}</span>
                    </label>
                    <input id="denyAdviceNl"
                           type="text"
                           value={data.denyAdviceNl || ""}
                           onChange={e => onChange("data.denyAdviceNl", e.target.value)}/>
                </div>
            </section>
        </section>
    )
        ;
}